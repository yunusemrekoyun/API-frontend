{"ast":null,"code":"var _jsxFileName = \"/Applications/Works/Yunus Stajyer/transfer-apiv1-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getUsers, transferMoney } from './services/api';\nimport TransferPage from './TransferPage'; // TransferPage bileşenini import ediyoruz\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [senderId, setSenderId] = useState('');\n  const [receiverId, setReceiverId] = useState('');\n  const [amount, setAmount] = useState('');\n  const [result, setResult] = useState('');\n\n  // Kullanıcıları almak için asenkron fonksiyon\n  const fetchUsers = async () => {\n    try {\n      const usersData = await getUsers();\n      console.log(\"userData : \", usersData);\n      setUsers(usersData);\n    } catch (error) {\n      console.error('Kullanıcıları getirirken bir hata oluştu:', error);\n    }\n  };\n\n  // İlk yükleme sırasında kullanıcıları almak için useEffect kancası\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Para transferi işlevi\n  const handleTransfer = async () => {\n    try {\n      const transferRequest = {\n        senderId,\n        receiverId,\n        amount\n      };\n      console.log(\"TransferData : \", transferRequest);\n      const resultData = await transferMoney(transferRequest);\n      setResult('Transfer başarılı!');\n      fetchUsers(); // Kullanıcı verilerini transfer işleminden sonra yeniden güncelle\n    } catch (error) {\n      setResult('Transfer başarısız.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(TransferPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KmfKwThArby3FfkMyG3SYvqRpsM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getUsers","transferMoney","TransferPage","jsxDEV","_jsxDEV","App","_s","users","setUsers","senderId","setSenderId","receiverId","setReceiverId","amount","setAmount","result","setResult","fetchUsers","usersData","console","log","error","handleTransfer","transferRequest","resultData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/Works/Yunus Stajyer/transfer-apiv1-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getUsers, transferMoney } from './services/api';\nimport TransferPage from './TransferPage'; // TransferPage bileşenini import ediyoruz\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [senderId, setSenderId] = useState('');\n  const [receiverId, setReceiverId] = useState('');\n  const [amount, setAmount] = useState('');\n  const [result, setResult] = useState('');\n\n  // Kullanıcıları almak için asenkron fonksiyon\n  const fetchUsers = async () => {\n    try {\n      const usersData = await getUsers();\n      console.log(\"userData : \",usersData)\n      setUsers(usersData);\n    } catch (error) {\n      console.error('Kullanıcıları getirirken bir hata oluştu:', error);\n    }\n  };\n\n  // İlk yükleme sırasında kullanıcıları almak için useEffect kancası\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Para transferi işlevi\n  const handleTransfer = async () => {\n    try {\n      const transferRequest = { senderId, receiverId, amount };\n      console.log(\"TransferData : \",transferRequest)\n      const resultData = await transferMoney(transferRequest);\n      setResult('Transfer başarılı!');\n      fetchUsers(); // Kullanıcı verilerini transfer işleminden sonra yeniden güncelle\n    } catch (error) {\n      setResult('Transfer başarısız.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <TransferPage />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,aAAa,QAAQ,gBAAgB;AACxD,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,SAAS,GAAG,MAAMlB,QAAQ,CAAC,CAAC;MAClCmB,OAAO,CAACC,GAAG,CAAC,aAAa,EAACF,SAAS,CAAC;MACpCV,QAAQ,CAACU,SAAS,CAAC;IACrB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACnE;EACF,CAAC;;EAED;EACAtB,SAAS,CAAC,MAAM;IACdkB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,eAAe,GAAG;QAAEd,QAAQ;QAAEE,UAAU;QAAEE;MAAO,CAAC;MACxDM,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACG,eAAe,CAAC;MAC9C,MAAMC,UAAU,GAAG,MAAMvB,aAAa,CAACsB,eAAe,CAAC;MACvDP,SAAS,CAAC,oBAAoB,CAAC;MAC/BC,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdL,SAAS,CAAC,qBAAqB,CAAC;IAClC;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBtB,OAAA,CAACF,YAAY;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACxB,EAAA,CAzCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}